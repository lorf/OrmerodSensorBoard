; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = .
env_default = release

[env:release]
platform = atmelavr
board = attiny85
build_flags = -g -Wall -Os -DOUTPUT_DIGITAL -DOUTPUT_ACTIVE_LOW
;-DFILTER
;-DDIGITAL_ENABLE_HYSTERESIS
upload_protocol = usbasp

[env:debug]
platform = atmelavr
board = attiny85
build_flags = ${env:release.build_flags} -DDEBUG_UART
upload_protocol = usbasp
;upload_flags = -B 10
; To upload via UART bootloader
;upload_protocol = arduino
;upload_port = /dev/ttyUSB0
;upload_speed = 19200
;upload_flags = -P$UPLOAD_PORT

;
; Env to flash optiboot bootloader using extra script. Use this env with
; "uploadboot" target to flash bootloader using usbasp, like this:
;
;     pio run -e attiny85_optiboot -t uploadboot
;
; Uses optiboot from https://github.com/TCWORLD/ATTinyCore, slightly modified
; Maximum sketch flash size: 7616 bytes, see "attiny85" entry in
; https://github.com/TCWORLD/ATTinyCore/blob/master/tiny/boards.txt .
; See bootloaders/README.md for more info.
;
[env:attiny85_optiboot]
platform = atmelavr
board = attiny85
build_flags = ${env:release.build_flags} -DDEBUG_UART
upload_protocol = usbasp
extra_script = bootloaders/platformio_extra.py
